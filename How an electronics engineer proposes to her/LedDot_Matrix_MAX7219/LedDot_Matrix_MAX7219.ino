#include <LedControl.h>

int DIN = 12;
int CS =  11;
int CLK = 10;

// CAPITAL ALPHABETICS
byte A[8]=     {0x18,0x3C,0x66,0xC3,0xFF,0xFF,0xC3,0xC3};
byte B[8]=     {0xFE,0xFF,0xC3,0xFE,0xFF,0xC3,0xFE,0xFE};
byte C[8]=     {0x7E,0xFF,0xC3,0xC0,0xC0,0xC3,0xFF,0x7E};
byte D[8]=     {0xFC,0xFE,0xC6,0xC6,0xC6,0xC6,0xFE,0xFC};
byte E[8]=     {0x7E,0x7E,0x60,0x78,0x78,0x60,0x7E,0x7E};
byte F[8]=     {0x7E,0x7E,0x60,0x78,0x78,0x60,0x60,0x60};
byte G[8]=     {0x7E,0xFF,0xC0,0xCF,0xCF,0xC3,0xFF,0x7E};
byte H[8]=     {0x66,0x66,0x66,0x7E,0x7E,0x66,0x66,0x66};
byte I[8]=     {0x7E,0x7E,0x18,0x18,0x18,0x18,0x7E,0x7E};
byte J[8]=     {0x7E,0x7E,0x18,0x18,0xD8,0xD8,0xF8,0xF8};
byte K[8]=     {0x63,0x66,0x6C,0x78,0x78,0x6C,0x66,0x63};
byte L[8]=     {0xF0,0x60,0x60,0x60,0x60,0x66,0x7E,0xFE};
byte M[8]=     {0xC3,0xE7,0xFF,0xDB,0xC3,0xC3,0xC3,0xC3};
byte N[8]=     {0xC3,0xE3,0xF3,0xFB,0xDF,0xCF,0xC7,0xC3};
byte O[8]=     {0x7E,0xFF,0xC3,0xC3,0xC3,0xC3,0xFF,0x7E};
byte P[8]=     {0x7C,0x7E,0x66,0x66,0x7E,0x7C,0x60,0x60};
byte Q[8]=     {0x7E,0xFF,0xC3,0xC3,0xC3,0xFF,0x7C,0x0E};
byte R[8]=     {0x7C,0x7E,0x66,0x66,0x7E,0x7C,0x6E,0x67};
byte S[8]=     {0x7E,0x7E,0x60,0x7E,0x7E,0x06,0x7E,0x7E};
byte T[8]=     {0xFF,0xFF,0x99,0x18,0x18,0x18,0x18,0x18};
byte U[8]=     {0x66,0x66,0x66,0x66,0x66,0x66,0x7E,0x3C};
byte V[8]=     {0x66,0x66,0x66,0x66,0x66,0x66,0x3C,0x18};
byte W[8]=     {0xC3,0xC3,0xC3,0xC3,0xDB,0xFF,0xE7,0xC3};
byte X[8]=     {0xC3,0x66,0x3C,0x18,0x3C,0x66,0xC3,0x00};
byte Y[8]=     {0x81,0xC3,0x66,0x3C,0x18,0x18,0x18,0x18};
byte Z[8]=     {0xFF,0xFF,0x8E,0x1C,0x38,0x71,0xFF,0xFF};

//small alphabetics

byte a[8]=     {0x00,0x18,0x04,0x04,0x1C,0x24,0x1C,0x00};
byte b[8]=     {0x20,0x20,0x38,0x24,0x24,0x24,0x38,0x00};
byte c[8]=     {0x00,0x00,0x38,0x40,0x40,0x40,0x38,0x00};
byte d[8]=     {0x08,0x08,0x38,0x48,0x48,0x48,0x38,0x00};
byte e[8]=     {0x00,0x00,0x18,0x24,0x3C,0x20,0x18,0x00};
byte f[8]=     {0x00,0x0C,0x10,0x10,0x38,0x10,0x10,0x10};
byte g[8]=     {0x00,0x00,0x30,0x48,0x48,0x38,0x08,0x70};
byte h[8]=     {0x20,0x20,0x20,0x38,0x24,0x24,0x24,0x00};
byte i[8]=     {0x10,0x00,0x30,0x10,0x10,0x10,0x38,0x00};
byte j[8]=     {0x08,0x00,0x08,0x08,0x08,0x28,0x18,0x00};
byte k[8]=     {0x20,0x20,0x24,0x28,0x30,0x28,0x24,0x00};
byte l[8]=     {0x30,0x10,0x10,0x10,0x10,0x10,0x38,0x00};
byte m[8]=     {0x00,0x00,0x78,0x54,0x54,0x54,0x54,0x00};
byte n[8]=     {0x00,0x00,0x38,0x24,0x24,0x24,0x24,0x00};
byte o[8]=     {0x00,0x00,0x18,0x24,0x24,0x24,0x18,0x00};
byte p[8]=     {0x00,0x00,0x38,0x24,0x24,0x38,0x20,0x20};
byte q[8]=     {0x00,0x00,0x18,0x24,0x24,0x1C,0x04,0x04};
byte r[8]=     {0x00,0x00,0x2C,0x30,0x20,0x20,0x20,0x00};
byte s[8]=     {0x00,0x00,0x3C,0x40,0x38,0x04,0x78,0x00};
byte t[8]=     {0x00,0x10,0x10,0x38,0x10,0x14,0x1C,0x00};
byte u[8]=     {0x00,0x00,0x24,0x24,0x24,0x24,0x1C,0x00};
byte v[8]=     {0x00,0x00,0x44,0x44,0x44,0x28,0x10,0x00};
byte w[8]=     {0x00,0x00,0x54,0x54,0x54,0x54,0x28,0x00};
byte x[8]=     {0x00,0x00,0x44,0x28,0x10,0x28,0x44,0x00};
byte y[8]=     {0x00,0x00,0x24,0x24,0x24,0x1C,0x04,0x38};
byte z[8]=     {0x00,0x00,0x3C,0x04,0x18,0x20,0x3C,0x00};

//Numerics

byte zero[8]=     {0x18,0x24,0x24,0x24,0x24,0x24,0x24,0x18};  //0
byte one[8]=     {0x10,0x30,0x10,0x10,0x10,0x10,0x38,0x00};   //1
byte two[8]=     {0x18,0x24,0x04,0x08,0x10,0x20,0x3C,0x00};   //2
byte three[8]=     {0x18,0x24,0x04,0x18,0x04,0x24,0x18,0x00};  //3
byte four[8]=     {0x04,0x0C,0x14,0x24,0x7E,0x04,0x04,0x00};  //4
byte five[8]=     {0x78,0x40,0x70,0x08,0x08,0x48,0x30,0x00};  //5
byte six[8]=     {0x30,0x48,0x40,0x70,0x48,0x48,0x30,0x00};  //6
byte seven[8]=     {0x00,0x7C,0x04,0x08,0x10,0x10,0x10,0x00}; //7
byte eight[8]=     {0x18,0x24,0x24,0x3C,0x24,0x24,0x18,0x00}; //8
byte nine[8]=     {0x18,0x24,0x24,0x18,0x04,0x04,0x18,0x00}; //9

//Special Characters
byte space[8]=     {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}; //Space
byte exclamation[8]=     {0x00,0x10,0x10,0x10,0x10,0x00,0x10,0x00};  // !
byte doublequote[8]=     {0x00,0x14,0x14,0x00,0x00,0x00,0x00,0x00};  // "
byte hash[8]=     {0x00,0x24,0x7E,0x24,0x24,0x7E,0x24,0x00};  // #
byte dollar[8]=     {0x10,0x3C,0x40,0x38,0x04,0x78,0x10,0x00};  // $
byte percent[8]=     {0x00,0x32,0x34,0x08,0x10,0x2C,0x4C,0x00};  // %
byte annd[8]=     {0x10,0x28,0x28,0x10,0x2A,0x24,0x1A,0x00};  // &
byte singlequote[8]=     {0x00,0x04,0x04,0x00,0x00,0x00,0x00,0x00};  // '
byte l_brac[8]=     {0x00,0x0C,0x10,0x20,0x20,0x10,0x0C,0x00};  // (
byte r_brac[8]=     {0x00,0x18,0x04,0x02,0x02,0x04,0x18,0x00};  // )
byte star[8]=     {0x00,0x10,0x7C,0x28,0x44,0x00,0x00,0x00};  // *
byte plus[8]=     {0x00,0x10,0x10,0x7C,0x10,0x10,0x00,0x00};  // +
byte comma[8]=     {0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x20};   // ,
byte minus[8]=     {0x00,0x00,0x00,0x3C,0x00,0x00,0x00,0x00};  // -
byte dot[8]=     {0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00};   // .
byte slash[8]=     {0x00,0x00,0x02,0x04,0x08,0x10,0x20,0x00};// /(Slash)
byte colon[8]=     {0x00,0x18,0x18,0x00,0x00,0x18,0x18,0x00};  // :
byte semicolon[8]=     {0x00,0x18,0x18,0x00,0x00,0x18,0x18,0x20};  // ;
byte lessthan[8]=     {0x08,0x10,0x20,0x40,0x20,0x10,0x08,0x00};  // <
byte equal[8]=     {0x00,0x00,0x00,0x3C,0x00,0x3C,0x00,0x00};  // =
byte greaterthan[8]=     {0x10,0x08,0x04,0x02,0x04,0x08,0x10,0x00}; // >
byte question[8]=     {0x38,0x44,0x44,0x08,0x10,0x10,0x00,0x10};  // ?
byte attherate[8]=     {0x00,0x38,0x44,0x54,0x6C,0x50,0x40,0x38};  // @
byte l_squarebrac[8]=     {0x00,0x38,0x20,0x20,0x20,0x20,0x38,0x00};  // [
byte backslash[8]=     {0x00,0x40,0x20,0x10,0x08,0x04,0x02,0x00};  // \ backslash
byte r_squarebrac[8]=     {0x00,0x1C,0x04,0x04,0x04,0x04,0x1C,0x00};  // ]
byte hat[8]=     {0x00,0x08,0x14,0x00,0x00,0x00,0x00,0x00};  //hat ^
byte underscore[8]=     {0x00,0x00,0x00,0x00,0x00,0x00,0x7E,0x00};  // _
byte  apostrophe[8]=     {0x00,0x04,0x02,0x00,0x00,0x00,0x00,0x00};  // `
byte l_curlybrac[8]=     {0x00,0x38,0x20,0x40,0x20,0x20,0x38,0x00};  // {
byte r_curlybrac[8]=     {0x00,0x1C,0x04,0x04,0x02,0x04,0x04,0x1C};  // }
byte verticalbar[8]=     {0x00,0x10,0x10,0x10,0x10,0x10,0x10,0x00};  // |
byte tilde[8]=     {0x00,0x00,0x00,0x14,0x28,0x00,0x00,0x00};  // ~


//Symbols
    byte smile[8]=   {0x3C,0x42,0xA5,0x81,0xA5,0x99,0x42,0x3C};
    byte neutral[8]= {0x3C,0x42,0xA5,0x81,0xBD,0x81,0x42,0x3C};
    byte frown[8]=   {0x3C,0x42,0xA5,0x81,0x99,0xA5,0x42,0x3C};
    byte love[8]=    {0x42,0xE7,0xFF,0xFF,0x7E,0x3C,0x18,0x00};


LedControl lc=LedControl(DIN,CLK,CS,0);

void setup(){
 lc.shutdown(0,false);       //The MAX72XX is in power-saving mode on startup
 lc.setIntensity(0,15);      // Set the brightness to maximum value
 lc.clearDisplay(0);         // and clear the display
}

void loop(){ 


    
    printByte(smile);
     
    delay(1000);
    printByte(space);
  delay(100);

    printIloveYou();

    printByte(smile);
     
    delay(1000);
  printByte(space);
  delay(100);

   
    lc.clearDisplay(0);
    
    delay(1000);
}

void printIloveYou()
{
  printByte(I);
  delay(1000);
  
  printByte(L);
  delay(1000);
  printByte(O);
  delay(1000);
  printByte(V);
  delay(1000);
  printByte(E);
  delay(1000);
   // Love Symbol
  printByte(love);
  delay(1000); 
  
  printByte(Y);
  delay(1000);
  printByte(O);
  delay(1000);
  printByte(U);
  delay(1000);

  // Name of the person
  printByte(J);
  delay(1000);
  printByte(E);
  delay(1000);
  printByte(S);
  delay(1000);
  printByte(S);
  delay(1000);
  printByte(I);
  delay(1000);
  printByte(E);
  delay(1000);
}

void printByte(byte character [])
{
  int i = 0;
  for(i=0;i<8;i++)
  {
    lc.setRow(0,i,character[i]);
  }
}
